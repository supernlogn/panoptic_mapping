<launch>
<!-- ============ Arguments ============ -->
  <!-- General -->
  <arg name="namespace" default="data"/> 
  <arg name="use_rio" default="false"/>
  <arg name="use_detectron" default="false"/>
  <arg name="visualize" default="true"/> 
  <arg name="use_sim_time" default="false"/>
  <param name="use_sim_time" value="$(arg use_sim_time)" />
  <!-- Flat Dataset args -->
  <arg name="base_path" default="/home/ioannis/datasets/large_flat/run1"/> 
  <arg name="play_rate" default="1"/>  <!-- Realtime factor -->
  <arg name="wait_time" default="0"/>  <!-- s -->
  <arg name="max_frames" default="1000"/> <!-- 90 -->
  
  <!-- Rio Dataset args -->
  <arg name="data_path" default="/home/ioannis/datasets/3RScan"/> 
  <arg name="scene_id" default="0"/> <!-- 0: 0-3, 1: 0-3, 2: 0-1 -->
  <arg name="scan_id" default="0"/>
  <arg name="rio_play_rate" default="20"/>  <!-- Hz -->
    
  <!-- Mapper -->
  <arg name="config" default="flat_groundtruth"/> <!-- flat_groundtruth, flat_detectron, rio_groundtruth, rio_detectron, single_tsdf -->
  <arg name="shutdown_when_finished" default="false"/> 
  
  <!-- Save/Load maps -->
  <arg name="load_map" default = "false"/>
  <arg name="load_file" default = "/home/ioannis/Documents/PanopticMapping/Data/maps/flat/run1.panmap"/>

  <!-- noise args -->
  <arg name="use_noise" default="true"/>

  <!-- Voxgraph supplied arguments -->
  <arg name="pointcloud_topic" value="pointcloud" doc="ROS topic for pointcloud input"/>
  <!-- debug -->
  <arg name="debug_mode"
       default="false"
       doc="Run the mapper in debug mode." />
  <arg unless="$(arg debug_mode)" name="launch_prefix" value="" />
  <arg if="$(arg debug_mode)" name="launch_prefix" value="gdb -ex run --args" />

<!-- ============ Run ============ -->
  <!-- Play data -->
  <arg name="wait" default="true" if="$(arg load_map)"/>
  <include file="$(find panoptic_mapping_utils)/launch/play_noisy_flat_dataset.launch" pass_all_args="true" unless="$(arg use_rio)" />
  <include file="$(find panoptic_mapping_utils)/launch/play_rio_dataset.launch" pass_all_args="true" if="$(arg use_rio)" />
  
  <!-- Mapper -->
  <node name="panoptic_mapper" pkg="panoptic_mapping_ros" type="panoptic_mapper_node" output="screen" ><!--required="true"-->
    <!-- Config -->
    <rosparam file="$(find panoptic_mapping_ros)/config/mapper/$(arg config).yaml"/>
     
    <!-- Input -->
    <remap from="color_image_in" to="$(arg namespace)/color_image"/>
    <remap from="depth_image_in" to="$(arg namespace)/depth_image"/>
    <remap from="segmentation_image_in" to="$(arg namespace)/segmentation_image"/>
    <remap from="labels_in" to="$(arg namespace)/segmentation_labels"/>
  </node>
  
  <!-- Map loader -->
  <node name="map_loader" pkg="panoptic_mapping_utils" type="map_loader.py" if="$(arg load_map)" output="screen">
     <param name="path" value="$(arg load_file)" /> 
     <param name="srv_name" value="/panoptic_mapper/load_map" /> 
     <param name="delay" value="0.1" /> 
  </node>
  

  <!-- Voxgraph -->
  <node name="voxgraph_mapper" pkg="voxgraph" type="voxgraph_mapping_node" output="screen" 
    launch-prefix="$(arg launch_prefix)">
    <rosparam file="$(find voxgraph)/config/voxgraph_mapper.yaml"/>
    <param name="submap_topic" value="/panoptic_mapper/background_submap_out" />
  </node>

  <!-- RVIZ Visualization-->
  <group if="$(arg visualize)">
    <!-- <node type="rviz" name="rVizVoxgraph" pkg="rviz" output="screen" args="-d $(find voxgraph)/config/voxgraph_mapper.rviz" /> -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find panoptic_mapping_ros)/config/rviz/devel_with_voxgraph.rviz" output="screen"/>
  </group>


</launch>
